{"version":3,"sources":["Componant/BodyFooter.jsx","Componant/body.jsx","Componant/NavBar.jsx","Componant/Modal.jsx","Componant/Footer.jsx","Componant/CallBord.jsx","Componant/Terms.jsx","Componant/Guidelines.jsx","Componant/Privacy.jsx","Componant/Switcher.jsx","serviceWorker.js","index.js"],"names":["Footer","state","className","href","to","Component","Body","props","connectAndGetRooms","a","setState","socket","io","process","on","TheroomName","console","log","Rooms","length","filter","room","roomName","emit","data","TheRoom","ShowRooms","bind","If3RoomAvailable","join","NoRoome","GoToCallRoomWatch","this","disconnect","e","error","list","howMany","idx","result","push","location","IsViewer","GoToCallRoom","cnt","el","target","id","history","pathname","IsPublic","roomgroup","SplitRoomList","map","romg","i","key","style","width","height","backgroundImage","onClick","Fragment","BodyFooter","withRouter","Navbar","myRef","React","createRef","RoomName","CallBorad","ajv","Ajv","schema","toggleNav","isBoxToggleOn","IsRommeExist","Warning","CollapsaNav","ToogleRoomNameBox","onchange","StartCreatingTheRoom","UpdateCheckBox","GoHome","GoStream","value","validate","name","current","errors","message","innerHTML","status","checked","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","title","tabIndex","role","aria-labelledby","aria-hidden","display","paddingRight","data-dismiss","ref","onChange","placeholder","htmlFor","Modal","Id","ToogleBox","PrivetMessage","SendPrivetMessage","admin","KikHimOut","CallBord","startConncting","CaseEditer","case","forEach","c","GuestEditer","guest","g","CreateOrJoinTheRoom","StartUserCamra","createDevice","device","Device","load","routerRtpCapabilities","rtpCapabilities","getProducers","match","params","isFreeToJoin","createSendTransport","warn","signalNewConsumerTransport","remoteProducerId","socketId","consumer","consumerTransport","createRecvTransport","callback","errback","dtlsParameters","serverConsumerTransportId","connectRecvTransport","producerTransport","parameters","kind","rtpParameters","appData","producersExist","connectSendTransport","isViewr","producerIds","producer","consume","producerId","consumerTransports","track","AddMediaStream","MediaStream","serverConsumerId","produce","initialState","canvas","photo","showTost","IsVedioElemntVisble","CloseTheSideCaller","GetElemntCssClass","ToggleElementCssClass","ShowTheSideCaller","ShowHistoryChat","SendMessageChat","TakeThumbnailImage","completeSession","isStream","LockRoom","HiddeTheRoom","JoinTheRoom","toast","Guests","index","indexOf","preventDefault","trim","HistoryChat","Message","ChatMessage","FullRoomName","BossId","First","setTimeout","document","producerToClose","find","transportData","close","isRoomLocked","posthion","UsersGuest","User","srcObject","getContext","drawImage","toDataURL","Transports","newgist","getVideoTracks","stop","navigator","mediaDevices","getUserMedia","audio","video","min","max","then","stream","guestList","catch","err","Lock","socketid","geust","userid","guestlist","m","Postion","view","iscase","includes","stv","nev","ChangeStatVale","cc","thegustid","geist","autoPlay","removeUserFromRoom","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","Terms","rel","Guidelines","Privacy","Switch","Boolean","window","hostname","ReactDOM","render","NavBar","path","component","Switcher","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.262e236e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component {\n    state = {  }\n\n    render() { \n        return ( <footer className=\"container-fluid m-0  bg-light  fixed-bottom \">\n          <div >\n          <div className=\"Logo m-1\" href=\"#\"></div>\n\n            <small className=\"d-block mb-3 text-muted\">© wemet.live 2017-2018</small>\n            <div className=\" text-center\">\n            <span><Link className=\"text-muted\" to={\"/Terms\"}>Terms of Service</Link></span>&nbsp; &nbsp; \n            <span><Link className=\"text-muted\" to={\"/Privacy\"}>Privacy Policy</Link></span>&nbsp; &nbsp;\n            <span><Link className=\"text-muted\" to={\"/Guidelines\"}>Community Guidelines</Link></span>\n\n            \n          </div>\n          </div>\n        \n       \n      </footer>\n       );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport io from \"socket.io-client\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport BodyFooter from \"./BodyFooter\";\nimport { withRouter } from 'react-router'\n\n\nclass Body extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      TheRoom: '',                              //the request room name \n      socket: io(`${process.env.REACT_APP_BACKE_END_URL}`),      //socket io object\n      Rooms: [],                                // list of the room requested from the server\n    }\n\n    this.ShowRooms = this.ShowRooms.bind(this);\n    this.If3RoomAvailable = this.If3RoomAvailable.bind(this);\n    this.join = this.join.bind(this);\n    this.NoRoome = this.NoRoome.bind(this);\n    this.GoToCallRoomWatch = this.GoToCallRoomWatch.bind(this)\n    this.connectAndGetRooms = this.connectAndGetRooms.bind(this)\n\n\n  }\n  //this function initae a server connection and set event lisner\n  connectAndGetRooms = async () => {\n    await this.setState({ socket: io(`${process.env.REACT_APP_BACKE_END_URL}`) })\n\n    //this event delete a room from the list \n    this.state.socket.on('DelteRoom', ({ TheroomName }) => {\n      console.log('DelteRoom')\n      console.log(this.state.Rooms)\n      if (this.state.Rooms.length === 0) return\n      let Rooms = [...this.state.Rooms]\n      Rooms = Rooms.filter(room => room !== TheroomName)\n      this.setState({ Rooms })\n\n    })\n\n    //this event add a room from the list \n    this.state.socket.on('AddRoom', ({ roomName }) => {\n      console.log('AddRoom')\n\n      console.log(this.state.Rooms)\n      if (this.state.Rooms.length === 0) {\n        let Rooms = [roomName]\n        this.setState({ Rooms })\n        return\n      }\n      let Rooms = [...this.state.Rooms, roomName]\n\n      this.setState({ Rooms })\n    })\n\n    //request the currnt live room in the server\n    this.state.socket.emit('getroom', 'mainrrom',\n      (data) => {\n        this.setState({ Rooms: data })\n      })\n\n\n  }\n\n  componentWillUnmount() {\n\n    try {\n      this.state.socket.disconnect()\n\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  //this function will devied the list of room in to group \n  SplitRoomList(list, howMany) {\n    var idx = 0\n    var result = []\n\n    while (idx < list.length) {\n      if (idx % howMany === 0) result.push([])\n      result[result.length - 1].push(list[idx++])\n    }\n\n    return result\n  }\n\n  componentDidMount() {\n\n    this.connectAndGetRooms()\n\n    try {\n      \n      if (this.props.location.state.IsViewer) {\n        this.setState({ TheRoom: this.props.location.state.TheRoom })\n\n        this.setState({ GoToCallRoom: true })\n\n      } else {\n\n\n      }\n    } catch (e) {\n\n    }\n  }\n\n  //this function will chek if 3 room in one list\n  If3RoomAvailable(cnt, el) {\n    if (cnt === 2) {\n      return el;\n    }\n  }\n\n  //this function will take the user to call room as viewr\n  GoToCallRoomWatch(e) {\n    let roomName = e.target.id;\n\n    this.props.history.push({\n      pathname: '/CallBorad/'+roomName,\n      state: {\n        IsPublic: false,\n        IsViewer: true\n      }\n    })\n\n\n  }\n\n  //this function will take the user to room as memper\n  join(e) {\n    let roomName = e.target.id;\n\n    this.props.history.push({\n      pathname: '/CallBorad/'+roomName,\n      state: {\n        IsPublic: false,\n        IsViewer: false\n      }\n    })\n\n\n  }\n\n  //this function display empty room message\n  NoRoome() {\n    return <div> <div className=\"row  justify-content-md-center\">\n      <div\n        className=\"col-xs-6 col-md-4 btn\">\n        <br></br>\n        <br></br>\n        <div className=''>\n          <div className=\"   mainstreamicon\"\n          >\n          </div>\n          <div className=\"textstream\" >\n            It's seem like no one is streamming<br />\n            how abut being the frist</div>\n        </div>\n      </div>\n\n    </div>\n\n    </div>\n\n  }\n\n  //this function will show the live room in the server\n  ShowRooms() {\n    if (this.state.Rooms.length === 0)  return this.NoRoome();\n\n    \n    let roomgroup = this.SplitRoomList(this.state.Rooms, 3)\n \n    if (roomgroup.length === 0) return this.NoRoome();\n\n\n    return roomgroup.map((romg, i) =>\n      <div key={i} className=\"row  justify-content-md-center\">\n        {romg.map((room, i) => <div key={i} className=\"col-xs-6 col-md-4 \">\n          <div id={room} className=\" mov mb-3  Vd-box \"\n            style={{ width: '280px', height: '200px', backgroundImage: `url(${process.env.REACT_APP_BACKE_END_URL}/imges/` + room + \".png)\" }} >\n            <span className=\" badge badge-danger\">LIVE</span>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <div className=''>\n              <button id={room} onClick={this.GoToCallRoomWatch} className=\"m-1 btn btn-sm  btn-primary\">just watch</button>\n              <button id={room} onClick={this.join} className=\"m-1 btn btn-sm btn-primary\">join this room</button>\n            </div>\n          </div>\n        </div>\n\n        )}\n      </div>)\n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <br></br>\n        <br></br>\n        <br></br>\n\n\n        <div className=\"container  mt-3 justify-content-md-center \">\n\n\n\n          {this.ShowRooms()}\n\n          <br></br>\n          <br></br>\n          <br></br>\n\n        </div>\n        <BodyFooter></BodyFooter>\n      </React.Fragment>\n    );\n  }\n\n}\n\n//<a href=\"https://iconscout.com/icons/online-streaming\" target=\"_blank\">Online Streaming Icon</a> by <a href=\"https://iconscout.com/contributors/iconscout\">Iconscout Store</a> on <a href=\"https://iconscout.com\">Iconscout</a>\n\nexport default withRouter(Body);","import React, { Component } from 'react';\nimport io from \"socket.io-client\";\nimport Ajv from 'ajv';\nimport { withRouter } from 'react-router'\n\n\nclass Navbar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef();\n    this.RoomName = React.createRef();\n    this.CallBorad = React.createRef();\n\n    this.state = {\n      ajv: new Ajv(),\n      schema: {\n        \"properties\":\n        {\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 5,\n            \"maxLength\": 8,\n            \"pattern\": \"^[a-zA-Z0-9]{4,10}$\"\n          }\n        }\n      },\n\n\n\n      socket: io(`${process.env.REACT_APP_BACKE_END_URL}` ),    //the value of the socketio object\n      Rooms: null,                              //the list og the room retrived from the server will be stored here\n      TheRoom: \"\",                              //the name of the room the user wan create\n      toggleNav: true,                         //toogle the diloag box                                            \n      isBoxToggleOn: true,                     //this value contain the state of the dilog box \n      IsPublic: true,                          //the state of the room will create \n      IsRommeExist: null,                      //the value retrived from the server is room excit or not\n    };\n\n    this.Warning = React.createRef();\n    this.CollapsaNav = this.CollapsaNav.bind(this)\n    this.ToogleRoomNameBox = this.ToogleRoomNameBox.bind(this);\n    this.onchange = this.onchange.bind(this);\n    this.StartCreatingTheRoom = this.StartCreatingTheRoom.bind(this);\n    this.UpdateCheckBox = this.UpdateCheckBox.bind(this)\n    this.GoHome = this.GoHome.bind(this)\n    this.GoStream = this.GoStream.bind(this)\n\n  }\n\n  //this function will take the user to the main bage\n  GoHome() {\n    this.props.history.push({\n      pathname: '/Switch',\n\n      state: { CallBorad: false }\n    })\n  }\n\n  //this function will take the user to the stramin room\n  GoStream() {\n    this.props.history.push({\n      pathname: '/Switch',\n\n      state: {\n        CallBorad: true, TheRoom: this.state.TheRoom, IsPublic: this.state.IsPublic,\n        IsViewer: false\n      }\n    })\n  }\n\n  //this function will store the value of the input in the state and vladate it\n  onchange(e) {\n    this.setState({ TheRoom: e.target.value })\n    if ((e.target.value).length < 3) return;\n\n    var valid = this.state.ajv.validate(this.state.schema, { name: e.target.value });\n    if (!valid) {\n\n      this.RoomName.current.className = \"form-control border border-danger\";\n      if (this.state.ajv.errors[0].message === 'should match pattern \"^[a-zA-Z0-9]{4,10}$\"') {\n        this.Warning.current.innerHTML = \"the name is not valid special character is not allowed\"\n\n      } else {\n        this.Warning.current.innerHTML = \"the name is not valed \" + this.state.ajv.errors[0].message\n\n      }\n      this.Warning.current.className = \"form-text text-danger\"\n      return\n    }\n\n    this.state.socket.emit('IsRommeExist', '{\"title\":\"' + e.target.value + '\"}',\n      (data) => {\n\n        if (data.status) {\n          this.RoomName.current.className = \"form-control border border-success\";\n          this.setState({ IsRommeExist: true })\n          this.Warning.current.innerHTML = \"the room name is valed\"\n          this.Warning.current.className = \"form-text text-success\"\n\n        } else {\n\n          this.RoomName.current.className = \"form-control border border-danger\";\n          this.setState({ IsRommeExist: false })\n          this.Warning.current.innerHTML = \"the name is not valed \" + data.room\n          this.Warning.current.className = \"form-text text-danger\"\n\n        }\n\n      })\n  }\n\n  //this function will empty the filed \n  //and close the dilog and take the use to the stram\n  StartCreatingTheRoom(e) {\n    this.RoomName.current.className = \"form-control border\";\n    this.Warning.current.innerHTML = \"\"\n    this.setState({ TheRoom: \"\" })\n    this.GoStream()\n    this.ToogleRoomNameBox()\n\n  }\n\n  //this function get called the to save the value of the check box to the state\n  UpdateCheckBox(e) {\n    this.setState({ IsPublic: e.target.checked })\n    console.log(this.state.IsPublic)\n  }\n\n  //this function will toggle the nav dilog\n  ToogleRoomNameBox(e) {\n    if (this.state.isBoxToggleOn) {\n      this.setState({ isBoxToggleOn: false })\n    } else {\n      this.setState({ isBoxToggleOn: true })\n    }\n\n  }\n\n  //this function will toggle the nav bar on small view\n  CollapsaNav(e) {\n    if (this.state.toggleNav) {\n      this.setState({ toggleNav: false })\n    } else {\n      this.setState({ toggleNav: true })\n\n\n    }\n  }\n\n\n  render() {\n\n    return (\n\n      <nav className=\"navbar navbar-expand-lg navbar-dark BK-header fixed-top\">\n        <div className={this.state.isBoxToggleOn ? \"\" : \"blockback\"}></div>\n        <div className=\"container\">\n\n          <div className=\"Logo\" href=\"#\"></div>\n          <div className=\"navbar-brand \">Wemet</div>\n\n          <button className={this.state.toggleNav ? \"navbar-toggler\" : \"navbar-toggler collapsed\"}\n            onClick={this.CollapsaNav}\n            type=\"button\" data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded={this.state.toggleNav ? \"false\" : \"true\"}\n            aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className={this.state.toggleNav ? \"collapse navbar-collapse\" : \"collapse navbar-collapse show\"}\n\n            id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto \">\n\n              <li className=\"nav-item  m-1\">\n                <abbr title=\"Home\">\n\n                  <div onClick={this.GoHome}>\n                    <div className=\" btn home\"></div>\n                  </div>\n                </abbr>\n              </li>\n\n              <li className=\"nav-item  m-1\">\n\n                <abbr title=\"Stream now\">\n                  <div\n                    onClick={this.ToogleRoomNameBox}\n                  >\n                    <div className=\"btn stream \"></div>\n                  </div>\n                </abbr>\n\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className={this.state.isBoxToggleOn ? \"modal fade\" : \"modal fade show\"}\n          id=\"exampleModal\" tabIndex=\"-1\"\n          role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n          aria-hidden={this.state.isBoxToggleOn ? \"true\" : \"\"}\n          style=\n          {this.state.isBoxToggleOn ? { display: 'none' } :\n            { display: 'block', paddingRight: '15px' }}\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"rounded-0 modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title  text-info font-weight-bold\" id=\"exampleModalLabel\">Create a chat room</h5>\n                <button onClick={this.ToogleRoomNameBox} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n\n                <input\n                  ref={this.RoomName}\n                  onChange={this.onchange} type=\"text\"\n                  value={this.state.TheRoom}\n\n                  className=\"form-control border\"\n                  name=\"\" placeholder=\"Room name\" id=\"\" />\n                <div >\n                  <small ref={this.Warning} className=\"form-text \"></small>\n\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n\n                <div className=\"custom-control custom-switch\">\n                  <input\n                    onChange={this.UpdateCheckBox}\n                    checked={this.state.IsPublic}\n                    type=\"checkbox\"\n                    className=\"custom-control-input\"\n                    id=\"customSwitch1\">\n                  </input>\n                  <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Public room (Visible for everyone)</label>\n                </div>\n                <div className=\" gradient  border rounded\">\n                  <button onClick={this.StartCreatingTheRoom} className=\"btn text-white font-weight-bold\">Stream</button>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>);\n  }\n}\n\nexport default withRouter(Navbar);","\nimport React, { Component } from 'react';\n\nclass Modal extends Component {\n\n  render() {\n    return (\n      <div className={this.props.Id[2] ? \"modal fade\" : \"modal fade show\"}\n        id=\"exampleModal\" tabIndex=\"-1\"\n        role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n        aria-hidden={this.props.Id[2] ? \"true\" : \"\"}\n        style=\n        {this.props.Id[2] ? { display: 'none' } :\n          { display: 'block', paddingRight: '15px' }}>\n\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"rounded-0 modal-content\">\n            <div className=\"modal-header\">\n              <button onClick={() => this.props.ToogleBox(this.props.Id)}\n                type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div\n\n              className=\"modal-body\">\n\n              <h5 className=\" text-info font-weight-bold\"\n                id=\"exampleModalLabel\">Send a privet message</h5>\n              <br></br>\n\n              <div >\n\n                <form className=\"form-inline h-80 justify-content-md-center \">\n                  <input\n                    onChange={this.props.onChange}\n                    type=\"text\" className=\"w-80 form-control\"\n                    value={this.props.PrivetMessage}\n                    name=\"PrivetMessage\" placeholder=\"Chat here\">\n                  </input>\n                  <button\n                    type=\"submit\"\n                    onClick={this.props.SendPrivetMessage}\n                    id={this.props.Id[1]}\n                    className=\" btn sendc\">\n                  </button>\n                  <div className=\"input-group-prepend\"></div>\n                </form>\n\n\n\n\n\n              </div>\n            </div>\n            <div style=\n              {!this.props.admin ? { display: 'none' } :\n                { display: 'block' }} className=\"modal-footer \">\n              <button onClick={() => this.props.KikHimOut(this.props.Id[1])} className=\"btn btn-danger\">Drop user from this room</button>\n            </div>\n          </div>\n        </div>\n      </div>)\n\n  }\n\n\n}\n\n\nexport default Modal;\n","import React, { Component } from 'react';\nclass Footer extends Component {\n    state = {  }\n    render() { \n        return ( <footer className=\"fixed-bottom bg-light\">\n        <div className=\"container\">\n          <p className=\"m-0 text-center text-white\">Copyright © wemet 2020</p>\n        </div>\n      </footer>\n       );\n    }\n}\n \nexport default Footer;","\nimport React, { Component } from 'react';\nimport Modal from './Modal';\nimport io from \"socket.io-client\";\nimport { Device } from 'mediasoup-client';\nimport { withRouter } from 'react-router'\nimport Footer from './Footer';\n\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nclass CallBord extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = initialState;\n    this.canvas = React.createRef();\n    this.photo = React.createRef();\n    this.showTost = this.showTost.bind(this);\n    this.CreateOrJoinTheRoom = this.CreateOrJoinTheRoom.bind(this)\n    this.createSendTransport = this.createSendTransport.bind(this)\n    this.createDevice = this.createDevice.bind(this);\n    this.StartUserCamra = this.StartUserCamra.bind(this);\n    this.IsVedioElemntVisble = this.IsVedioElemntVisble.bind(this);\n    this.CloseTheSideCaller = this.CloseTheSideCaller.bind(this)\n    this.AddMediaStream = this.AddMediaStream.bind(this);\n    this.GetElemntCssClass = this.GetElemntCssClass.bind(this);\n    this.ToggleElementCssClass = this.ToggleElementCssClass.bind(this);\n    this.ShowTheSideCaller = this.ShowTheSideCaller.bind(this);\n    this.ShowHistoryChat = this.ShowHistoryChat.bind(this);\n    this.SendMessageChat = this.SendMessageChat.bind(this);\n    this.onChange = this.onChange.bind(this)\n    this.TakeThumbnailImage = this.TakeThumbnailImage.bind(this)\n    this.signalNewConsumerTransport = this.signalNewConsumerTransport.bind(this)\n    this.connectRecvTransport = this.connectRecvTransport.bind(this)\n    this.completeSession = this.completeSession.bind(this)\n    this.getProducers = this.getProducers.bind(this)\n    this.isStream = this.isStream.bind(this)\n    this.KikHimOut = this.KikHimOut.bind(this)\n    this.SendPrivetMessage = this.SendPrivetMessage.bind(this)\n    this.ToogleBox = this.ToogleBox.bind(this)\n    this.LockRoom = this.LockRoom.bind(this)\n    this.HiddeTheRoom = this.HiddeTheRoom.bind(this)\n    this.JoinTheRoom = this.JoinTheRoom.bind(this)\n    this.startConncting = this.startConncting.bind(this)\n\n\n  }\n\n  //this function will show the notftion\n  showTost(data) {\n    toast(data)\n  }\n\n  //open or close the dilog for a selected user\n  //identfi the user that clicked on and safe the state\n  //of the box \n  ToogleBox(guest) {\n    let Guests = [...this.state.guest]\n    let index = this.state.guest.indexOf(guest)\n\n    if (guest[2]) {\n      Guests[index][2] = false\n      this.setState({ guest: Guests })\n\n    } else {\n      Guests[index][2] = true\n      this.setState({ guest: Guests })\n    }\n\n  }\n\n  /*\n  send a Privet message to user\n  check if the input is empty and add it \n  to HistoryChat savet to the state empty the \n  chat box and send it to the server\n  */\n  SendPrivetMessage(e) {\n    e.preventDefault();\n    if (this.state.PrivetMessage.trim() === \"\") return\n\n    let HistoryChat = [...this.state.HistoryChat]\n    HistoryChat.push(<div className=\" messageitem \">\n      {this.state.PrivetMessage}</div>)\n    this.setState({ HistoryChat });\n    this.setState({ PrivetMessage: \"\" })\n    this.state.socket.emit('SendPrivetMessage',\n      { id: e.target.id, Message: this.state.PrivetMessage }, room => {\n        console.log(room)\n      }\n    )\n  }\n\n  /*\n  send message to public chat board\n  check if the input is empty and add it \n  to HistoryChat savet to the state empty the \n  chat box and send it to the server\n  */\n  SendMessageChat(e) {\n    e.preventDefault();\n    if (this.state.ChatMessage.trim() === \"\") return\n\n    let HistoryChat = [...this.state.HistoryChat]\n    HistoryChat.push(<div className=\" messageitem \">\n      {this.state.ChatMessage}</div>)\n    this.setState({ HistoryChat });\n    this.setState({ ChatMessage: \"\" })\n    this.state.socket.emit('Message',\n      '{\"title\":\"' + this.props.match.params.room + '\"}',\n      this.state.ChatMessage,\n    )\n\n  }\n\n  /*\n  this function is gone take the room name that \n  passed in the param and send it to the server \n  if you pass is viewer as true that mean you just \n  gone whatch the stream. else if the room excist try to join it \n  if not create it and you will resive the frist as true\n  and set you as the room admin .\n  if the room is full you just gone watch ti\n  ---------------------------------------------------------\n  upon reseving the rtpCapabilities creat a device \n  if viewer set as true will not  create send transport \n  and just resice any new procuser the server send \n  */\n\n  CreateOrJoinTheRoom() {\n    let IsViewer;\n    let IsPublic = null;\n\n    try {\n      if (this.props.location.state.IsViewer) {\n        IsViewer = true\n\n      } else {\n        IsViewer = false\n      }\n    } catch (e) {\n      IsViewer = false\n\n    }\n\n    try {\n      if (!this.props.location.state.IsPublic) {\n        IsPublic = false;\n\n      } else {\n        IsPublic = true;\n\n      }\n    }\n    catch (e) {\n      IsPublic = true;\n\n    }\n\n    //create room name it this way to add mor info in in the room name    \n    let FullRoomName = '{\"title\":\"' + this.props.match.params.room +\n      '\",\"IsPublic\":' + IsPublic +\n      ',\"IsViewer\":' + IsViewer + '}';\n\n    this.state.socket.emit('CreateStream', FullRoomName\n      ,\n      ({ status, rtpCapabilities, BossId, room, First }) => {\n\n\n        if (!status) {\n          //if status came with wrong result and rtpCapabilities\n          // that mean you just gone watch  the room\n          if (rtpCapabilities) {\n\n            this.showTost(room);\n            this.setState({ BossId })\n\n            this.setState({ rtpCapabilities })\n            this.setState({ IsViewer: true })\n\n            // once we have rtpCapabilities from the Router, create Device\n            this.createDevice()\n\n            return\n          }\n          // if error happen quit the app and got to home page\n          setTimeout(function () {\n            this.showTost(\"The room is not strmed\");\n            document.location.href = \"/\"\n          }, 2000);\n          return\n        }\n\n        //if this value came as true you are the admin of this room\n        if (First) {\n          this.setState({ First: true })\n          this.setState({ BossId: this.state.socket.id })\n          this.setState({ HiddeTheRoom: IsPublic })\n        } else {\n          this.setState({ BossId })\n        }\n\n        this.showTost(room);\n        this.setState({ rtpCapabilities })\n        this.createDevice()\n      })\n\n    //this event new-prouducer triggerd a new user is joined the room and \n    // you gone resive his stream via producerId and socketId is his socket id\n    this.state.socket.on('new-producer', async ({ producerId, socketId }) => {\n     //console.log(this.state.queueGuest)\n     //if(this.state.queueGuest[socketId]) return\n     //this.setState({queueGuest:[...this.state.queueGuest,socketId]})\n      await this.signalNewConsumerTransport(producerId, socketId)\n\n    })\n    //this event triggred when user colse his stram you shuld close \n    //the connection to prevent memory leak\n    this.state.socket.on('producer-closed', ({ remoteProducerId, socketId }) => {\n      //find the specifc transport and close it\n      try {\n        const producerToClose = this.state.consumerTransports.find(transportData => transportData.producerId === remoteProducerId)\n        producerToClose.consumerTransport.close()\n        producerToClose.consumer.close()\n      } catch (e) {\n        console.error(e)\n      }\n      // remove the consumer transport from the list\n      let consumerTransports = [...this.state.consumerTransports.filter(transportData => transportData.producerId !== remoteProducerId)]\n      this.setState({ consumerTransports })\n      // hide the video div element\n      this.completeSession(socketId)\n\n    })\n\n    //this event triggerd to notify you there is chance to join the room\n    this.state.socket.on('FreeToJoin', ({ status }) => {\n\n      if (status) {\n        this.setState({ isFreeToJoin: true })\n        return\n      }\n\n      this.setState({ isFreeToJoin: false })\n\n    })\n\n    //this event triggerd when the room admin ban you from the room\n    this.state.socket.on('GoOut', () => {\n      this.showTost(\"the admin drop you from this room\");\n      setTimeout(function () {\n        document.location.href = \"/\"\n      }, 200);\n    })\n\n    //this event triggred when you becam admin and the room setting seted \n    this.state.socket.on('switchAdminSetting', ({ isRoomLocked, isStream, IsPublic }) => {\n      this.setState({ isRoomLocked, isStream, IsPublic })\n      this.setState({ HiddeTheRoom: IsPublic })\n\n    })\n\n    //this event triggred when admin switch to another youser\n    this.state.socket.on('switchAdmin', ({ admin }) => {\n      this.setState({ BossId: admin })\n\n      // if you are the new admin set you as admin\n      if (admin === this.state.socket.id) {\n\n        this.setState({ First: true })\n\n      }\n      /* \n      find the new admin in the room and set\n      his view to the big view and clear his \n      postion in the guest list\n      */\n      let UsersGuest = [...this.state.guest]\n      let posthion;\n      UsersGuest.forEach(User => {\n        if (User[1] === this.state.BossId) {\n          UsersGuest[0][0].current.srcObject = User[0].current.srcObject\n          UsersGuest[0][1] = this.state.BossId\n          posthion = UsersGuest.indexOf(User)\n          User[1] = 0\n        }\n\n      })\n\n      this.setState({ guest: UsersGuest })\n      this.CloseTheSideCaller(posthion);\n\n\n    })\n\n    //this event triggerd when you recive a privet message\n    //it will save to HistoryChat\n    this.state.socket.on('PrivetMessage', function (Message) {\n      let HistoryChat = [...this.state.HistoryChat]\n\n      HistoryChat.push(<div className=\"alr messageitem \">{Message}</div>)\n\n      this.setState({ HistoryChat });\n    }.bind(this));\n\n    //this event triggerd when you recive a  message\n    //it will save to HistoryChat\n    this.state.socket.on('Message', function (Message) {\n\n      let HistoryChat = [...this.state.HistoryChat]\n\n      HistoryChat.push(<div className=\"alr messageitem \">{Message.Message}</div>)\n\n      this.setState({ HistoryChat });\n    }.bind(this));\n  }\n\n  //this function take the value and the name\n  //from the input and save it to the state\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  //this function take small imge from the user video\n  // and send it to the server as a thumnail imge\n  TakeThumbnailImage() {\n    var context = this.canvas.current.getContext('2d');\n\n    context.drawImage(this.state.guest[0][0].current, 0, 0, 280, 200);\n\n    var data = this.canvas.current.toDataURL('image/png', 0.1);\n\n    this.state.socket.emit('saveimg', data,\n      (data) => { }\n    )\n\n  }\n\n\n  componentWillUnmount() {\n\n    try {\n      // disconnect from the socket server\n      this.state.socket.disconnect()\n\n    } catch (e) {\n      console.log(e)\n\n    }\n\n    try {\n      //close all the consumer transport\n      console.log(this.state.consumerTransports.length)\n      if(!this.state.consumerTransports.length) return\n\n      this.state.consumerTransports.forEach(Transports => {\n        if(Transports===null) return\n\n        Transports.consumerTransport.close()\n        Transports.consumer.close()\n      });\n\n    } catch (e) {\n      console.log(e)\n\n    }\n\n    try {\n      //close the send  producer transport\n      console.log(this.state.producerTransport)\n      if(this.state.producerTransport===null) return\n      this.state.producerTransport.close()\n    } catch (e) {\n      console.log(e)\n\n    }\n\n\n\n    console.log('Leving this component');\n    try {\n      //when leave the page close the cam \n      let newgist = [...this.state.guest]\n\n      newgist.forEach(guest => {\n\n        if (guest[1] !== 0) {\n          \n          guest[0].current.srcObject.getVideoTracks().forEach(track => {\n            console.log(track)\n\n            track.stop()\n          })\n        }\n\n      })\n\n      this.setState({ guest: newgist })\n\n    } catch (e) {\n\n      console.log(e)\n\n    }\n\n\n\n\n  }\n\n  //this function will connecect the socketio server \n  // and save some initail date to the state\n  // this function shuld run after the component have mounted\n  startConncting = async () => {\n    await this.setState({ socket: io(`${process.env.REACT_APP_BACKE_END_URL}`) });\n\n    //set all css view cases the false excpit the frist one\n    let CaseEditer = [...this.state.case]\n    this.state.case.forEach((c, i) => {\n      CaseEditer[i] = false\n      if (i === 0) CaseEditer[i] = true;\n    })\n\n    this.setState({ case: CaseEditer })\n\n    let GuestEditer = [...this.state.guest]\n    this.state.guest.forEach((g, i) => {\n      GuestEditer[i][0] = React.createRef();\n      GuestEditer[i][1] = 0;\n      GuestEditer[i][2] = true;\n    })\n    this.setState({ guest: GuestEditer });\n\n\n    try {\n      //if the isviewer came as true dont run the cam \n      //star connection to the server to watch the stream\n      if (this.props.location.state.IsViewer) {\n        this.CreateOrJoinTheRoom()\n\n      } else {\n        //run the cam and the the  StartUserCamra function will connect to the server\n        this.StartUserCamra(0);\n      }\n    }\n\n    catch (e) {\n      console.log(e)\n      this.StartUserCamra(0);\n\n    }\n\n\n\n  }\n\n  componentDidMount() {\n    //when the component is mounted start connecting to the server\n    this.startConncting();\n  }\n\n  //this check if the id if 0 it visible \n  IsVedioElemntVisble(id) {\n    if (id === 0) return false\n\n    return true\n\n  }\n\n  //this function will start accessing the webcam\n  //and make it avalbe if the user is viewer will not connect to\n  // to the server if not will connect to the server and \n  StartUserCamra(i) {\n    navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        width: {\n          min: 640,\n          max: 1920,\n        },\n        height: {\n          min: 400,\n          max: 1080,\n        }\n      }\n    })\n      .then(function (stream) {\n        let track = stream.getVideoTracks()[0]\n        let params = this.state.params\n        params = {\n          track,\n          ...params\n        }\n        this.setState({ params })\n\n        var guestList = [...this.state.guest]\n        if (this.state.socket.id) {\n          guestList[i][1] = this.state.socket.id\n        }\n        guestList[i][0].current.srcObject = stream;\n\n        this.setState({ guest: guestList });\n        if (i === 0) {\n          this.CreateOrJoinTheRoom();\n        }\n        //whait a bit to let the cam load and then\n        //take a ThumbnailImage if the user is admin\n        setTimeout(() => {\n\n          if (this.state.First) {\n\n            this.TakeThumbnailImage();\n          }\n        }, 500);\n\n      }.bind(this))\n\n      .catch(function (err) {\n\n        console.log(\"An error occurred: \" + err);\n      });\n\n  }\n\n  //this function will lock the room\n  // the server will check if you are the admin\n  LockRoom(e) {\n    this.setState({ Lock: e.target.checked })\n    this.state.socket.emit('LockTheRoom', this.state.Lock, data => { })\n  }\n\n  //this function will prevent the roomfrom streaming to the public\n  // the server will check if you are the admin\n  isStream(e) {\n    this.setState({ isStream: e.target.checked })\n    this.state.socket.emit('isStream', this.state.isStream, data => { })\n  }\n\n\n  //this function will hide the room\n  // the server will check if you are the admin\n  HiddeTheRoom(e) {\n    this.setState({ HiddeTheRoom: e.target.checked })\n    this.state.socket.emit('HiddeTheRoom', this.state.Lock, data => { })\n  }\n\n  //this function will ban a spesifc user apssed \n  // to it the server will check if you are the admin\n  KikHimOut(socketid) {\n    let guest = this.state.guest.find((geust, i) => geust[1] === socketid)\n    this.ToogleBox(guest)\n    this.state.socket.emit('kik', socketid, data => { })\n  }\n\n  //this function wil just go\n  // to the same page to allow the user\n  // to join this room\n  JoinTheRoom() {\n    this.props.history.push({\n      pathname: '/Switch',\n      state: {IsPublic:false, IsViewer: false, CallBorad: true, TheRoom: this.props.match.params.room }\n    })\n  }\n  /*\n  this function will add the stream of users \n  and display it and if the user comming is admin\n  it will put it in the main view\n  */\n  AddMediaStream(userid, stream) {\n\n    let guestlist = [...this.state.guest]\n\n    for (let i = 1; i < guestlist.length; i++) {\n\n      if (userid === this.state.BossId) {\n\n        guestlist[0][0].current.srcObject = stream;\n        guestlist[0][1] = userid;\n\n        if (this.state.IsViewer) break;\n\n        for (let i = 1; i < guestlist.length; i++) {\n          if (guestlist[i][1] === 0) {\n\n            guestlist[i][1] = this.state.socket.id;\n\n            if (!this.state.IsViewer) {\n\n              this.StartUserCamra(i);\n\n            }\n            this.ShowTheSideCaller(i)\n            break;\n          }\n        }\n        break;\n      }\n\n      if (guestlist[i][1] === 0) {\n        guestlist[i][0].current.srcObject = stream;\n        guestlist[i][1] = userid;\n        this.ShowTheSideCaller(i)\n        break;\n      }\n    }\n\n    this.setState({ guest: guestlist })\n\n  }\n\n  //this function will will show the messages from the state\n  ShowHistoryChat() {\n    return this.state.HistoryChat.forEach(m => <div> {m}</div>)\n  }\n\n  //this function will close the side bar when no active view in it\n  CloseTheSideCaller(i) {\n\n    if ((i === 1 || i === 2) && this.state.guest[1][1] === 0 && this.state.guest[2][1] === 0) {\n\n      this.ToggleElementCssClass(1)\n\n    }\n\n    if ((i === 3 || i === 4) && this.state.guest[3][1] === 0 && this.state.guest[4][1] === 0) {\n      this.ToggleElementCssClass(2)\n    }\n\n\n  }\n\n  // this function will get the css class from view depnd on the current case\n  GetElemntCssClass(Postion) {\n\n    return this.state.view[Postion][this.state.case.indexOf(true)]\n  }\n\n  //this function will open the side bar when there is active view in it\n  ShowTheSideCaller(i) {\n    if (i !== 0) {\n      let iscase = this.state.case.indexOf(true);\n      if ((i === 1 || i === 2) && ![2, 3, 4, 5].includes(iscase)) {\n        this.ToggleElementCssClass(1)\n      }\n\n      if ((i === 3 || i === 4) && ![3, 4, 6, 7].includes(iscase)) {\n        this.ToggleElementCssClass(2)\n\n      }\n    }\n  }\n\n  //this fuction will check the css cass and\n  //toggle it to its oppessit case in the cases arry\n  ToggleElementCssClass(i) {\n    let stv = this.state.case.indexOf(true)\n\n    let nev = this.state.ChangeStatVale[i][stv]\n\n    let cc = [...this.state.case]\n\n    cc[stv] = false\n    cc[nev] = true\n    this.setState({ case: cc });\n  }\n\n  //this function will create a device for mediasoup api\n  createDevice = async () => {\n    try {\n      let device = new Device()\n\n      // https://mediasoup.org/documentation/v3/mediasoup-client/api/#device-load\n      // Loads the device with RTP capabilities of the Router (server side)\n      // let routerRtpCapabilities = this.state.rtpCapabilities\n\n      await device.load({ routerRtpCapabilities: this.state.rtpCapabilities });\n      console.log(device)\n      this.setState({ device })\n      device = null;\n\n      //if the user is not viewr create send transport\n      if (!this.state.IsViewer) {\n        // once the device loads, create transport\n        this.createSendTransport()\n\n      } else {\n\n        //get the current producers and chek if joining the room is avaliple\n        this.getProducers()\n\n        this.state.socket.emit('isFreeToJoin', { roomName: this.props.match.params.room }, (data) => {\n          if (data.status) {\n            this.setState({ isFreeToJoin: true })\n          } else {\n            this.setState({ isFreeToJoin: false })\n\n          }\n\n        })\n      }\n\n    } catch (error) {\n      console.log(error)\n      if (error.name === 'UnsupportedError')\n        console.warn('browser not supported')\n    }\n  }\n\n  /*\n  this function used when new user joied the room and it take\n  the remotpruducer and socketid create a recive transport\n  and tell the server to create a consumer transport \n  */\n  signalNewConsumerTransport = async (remoteProducerId, socketId) => {\n\n    await this.state.socket.emit('createWebRtcTransport', { consumer: true }, ({ params }) => {\n      // The server sends back params needed \n      // to create Send Transport on the client side\n      if (params.error) {\n        console.log(params.error)\n        return\n      }\n      console.log(`PARAMS... ${params}`)\n\n      let consumerTransport\n      try {\n        consumerTransport = this.state.device.createRecvTransport(params)\n      } catch (error) {\n        // exceptions: \n        // {InvalidStateError} if not loaded\n        // {TypeError} if wrong arguments.\n        console.log(error)\n        return\n      }\n\n      consumerTransport.on('connect', async ({ dtlsParameters }, callback, errback) => {\n        try {\n          // Signal local DTLS parameters to the server side transport\n          // see server's socket.on('transport-recv-connect', ...)\n          await this.state.socket.emit('transport-recv-connect', {\n            dtlsParameters,\n            serverConsumerTransportId: params.id,\n          })\n\n          // Tell the transport that parameters were transmitted.\n          callback()\n        } catch (error) {\n          // Tell the transport that something was wrong\n          errback(error)\n        }\n      })\n      // after createing the tranpsort connect to it\n      this.connectRecvTransport(consumerTransport, remoteProducerId, socketId, params.id)\n    })\n    //if viewr check if room is avalipee to join\n    if (this.state.IsViewer) {\n      this.state.socket.emit('isFreeToJoin', { roomName: this.props.match.params.room }, (data) => {\n        if (data.status) {\n          this.setState({ isFreeToJoin: true })\n        } else {\n          this.setState({ isFreeToJoin: false })\n\n        }\n\n      })\n    }\n  }\n\n  //this function will create transport to send your strean\n  createSendTransport = () => {\n    // see server's socket.on('createWebRtcTransport', sender?, ...)\n    // this is a call from Producer, so sender = true\n    this.state.socket.emit('createWebRtcTransport', { consumer: false }, ({ params }) => {\n      // The server sends back params needed \n      // to create Send Transport on the client side\n      if (params.error) {\n        console.log(params.error)\n        return\n      }\n\n      console.log(params)\n\n      // creates a new WebRTC Transport to send media\n      // based on the server's producer transport params\n      // https://mediasoup.org/documentation/v3/mediasoup-client/api/#TransportOptions\n      this.setState({ producerTransport: this.state.device.createSendTransport(params) })\n\n      // https://mediasoup.org/documentation/v3/communication-between-client-and-server/#producing-media\n      // this event is raised when a first call to transport.produce() is made\n      // see connectSendTransport() below\n      this.state.producerTransport.on('connect', async ({ dtlsParameters }, callback, errback) => {\n        try {\n          // Signal local DTLS parameters to the server side transport\n          // see server's socket.on('transport-connect', ...)\n          await this.state.socket.emit('transport-connect', {\n            dtlsParameters,\n          })\n\n          // Tell the transport that parameters were transmitted.\n          callback()\n\n        } catch (error) {\n          errback(error)\n        }\n      })\n\n      this.state.producerTransport.on('produce', async (parameters, callback, errback) => {\n        console.log(parameters)\n\n        try {\n          // tell the server to create a Producer\n          // with the following parameters and produce\n          // and expect back a server side producer id\n          // see server's socket.on('transport-produce', ...)\n          await this.state.socket.emit('transport-produce', {\n            kind: parameters.kind,\n            rtpParameters: parameters.rtpParameters,\n            appData: parameters.appData,\n          }, ({ id, producersExist }) => {\n            // Tell the transport that parameters were transmitted and provide it with the\n            // server side producer's id.\n            callback({ id })\n\n            // if producers exist, then join room\n            if (producersExist) this.getProducers()\n          })\n        } catch (error) {\n          errback(error)\n        }\n      })\n\n      this.connectSendTransport()\n    })\n  }\n\n  //this function will get all \n  // current producer from the server and counsume them\n  getProducers = () => {\n    this.state.socket.emit('getProducers', {\n      isViewr: this.state.IsViewer,\n      roomName: this.props.match.params.room\n    }, producerIds => {\n      console.log(producerIds)\n      // for each of the producer create a consumer\n      // producerIds.forEach(id => signalNewConsumerTransport(id))\n      producerIds.forEach(producer => this.signalNewConsumerTransport(producer[0], producer[1]))\n    })\n  }\n\n  //connect the rescv transport\n  connectRecvTransport = async (consumerTransport, remoteProducerId, socketId, serverConsumerTransportId) => {\n    // for consumer, we need to tell the server first\n    // to create a consumer based on the rtpCapabilities and consume\n    // if the router can consume, it will send back a set of params as below\n    await this.state.socket.emit('consume', {\n      rtpCapabilities: this.state.device.rtpCapabilities,\n      remoteProducerId,\n      serverConsumerTransportId,\n    }, async ({ params }) => {\n      if (params.error) {\n        console.log('Cannot Consume')\n        return\n      }\n\n      console.log(`Consumer Params ${params}`)\n      console.log(params)\n      // then consume with the local consumer transport\n      // which creates a consumer\n      const consumer = await consumerTransport.consume({\n        id: params.id,\n        producerId: params.producerId,\n        kind: params.kind,\n        rtpParameters: params.rtpParameters\n      })\n\n      let consumerTransports = [\n        ...this.state.consumerTransports,\n        {\n          consumerTransport,\n          serverConsumerTransportId: params.id,\n          producerId: remoteProducerId,\n          consumer,\n        },\n      ]\n      this.setState({ consumerTransports })\n      const { track } = consumer\n\n      //add the new stream to the view \n      this.AddMediaStream(socketId, new MediaStream([track]))\n\n      // the server consumer started with media paused\n      // so we need to inform the server to resume\n      this.state.socket.emit('consumer-resume', { serverConsumerId: params.serverConsumerId })\n    })\n  }\n\n  //this function will connect our send transport to the server\n  connectSendTransport = async () => {\n    // we now call produce() to instruct the producer transport\n    // to send media to the Router\n    // https://mediasoup.org/documentation/v3/mediasoup-client/api/#transport-produce\n    // this action will trigger the 'connect' and 'produce' events above\n    console.log(this.state.params)\n    let producer = await this.state.producerTransport.produce(this.state.params)\n    this.setState({ producer })\n    this.state.producer.on('trackended', () => {\n      console.log('track ended')\n\n      // close video track\n    })\n\n    this.state.producer.on('transportclose', () => {\n      console.log('transport ended')\n\n      // close video track\n    })\n  }\n\n  //this function called when user quit the room\n  // it will clear his postion it the guist list\n  // and close the side bar\n  completeSession(id) {\n    //remove the socket from thw queu list\n    //if(this.state.queueGuest[id]) this.setState({queueGuest:[...this.state.queueGuest.filter(guest=>guest!==id)]})\n\n    var guestList = [...this.state.guest];\n\n    let thegustid;\n\n    guestList.forEach((geist, i) => {\n      if (geist[1] === id) {\n        console.log(i)\n        geist[1] = 0;\n        thegustid = i;\n\n      }\n\n    })\n\n    this.setState({ guest: guestList })\n    this.CloseTheSideCaller(thegustid);\n\n\n  };\n\n\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n        <ToastContainer />\n\n        <canvas ref={this.canvas} className='d-none' width='280' height='200' id=\"canvas\"></canvas>\n\n        <div className=\"container-fluid\t\">\n\n          <div className=\"row \">\n            <br></br>\n            <br></br>\n\n          </div>\n          <br></br>\n\n          <div style={!this.state.IsViewer ? { display: 'none' } : { display: 'block' }} className=\"custom-control custom-switch\">\n            <div style={!this.state.isFreeToJoin ? { display: 'none' } : { display: 'block' }} className=\"custom-control custom-switch\">\n              <span\n                onClick={this.JoinTheRoom} className=\"badge badge-primary btn \">\n                Free window To Join\n\n              </span>\n            </div>\n          </div>\n\n            <div  style={!this.state.First ? { display: 'none' } : { display: 'block' }} className=\"custom-control custom-switch\">\n              <input\n                onChange={this.LockRoom}\n                type=\"checkbox\"\n                checked={this.state.Lock}\n                className=\" custom-control-input\"\n                name=\"Lock\"\n\n                id=\"customSwitch2\">\n              </input>\n              <label className=\"custom-control-label\" htmlFor=\"customSwitch2\">Lock the rooms</label>\n            </div>\n\n\n            <div  style={!this.state.First ? { display: 'none' } : { display: 'block' }} className=\"custom-control custom-switch\">\n              <input\n                onChange={this.HiddeTheRoom}\n                type=\"checkbox\"\n                checked={this.state.HiddeTheRoom}\n                className=\"d- custom-control-input\"\n                name=\"HiddeTheRoom\"\n\n                id=\"customSwitch3\">\n              </input>\n              <label className=\"custom-control-label\" htmlFor=\"customSwitch4\">the rooms is not hidden</label>\n            </div>\n\n            <div  style={!this.state.First ? { display: 'none' } : { display: 'block' }} className=\"custom-control custom-switch\">\n              <input\n                onChange={this.isStream}\n                type=\"checkbox\"\n                checked={this.state.isStream}\n                className=\"  custom-control-input\"\n                name=\"HiddeTheRoom\"\n\n                id=\"customSwitch4\">\n              </input>\n              <label className=\"custom-control-label\" htmlFor=\"customSwitch4\">Stop public Streaming</label>\n            </div>\n\n\n          <div className=\"  row no-gutters   justify-content-md-center h-100 \">\n\n\n            <div className={this.GetElemntCssClass(0) + ` chatback`}>\n              <form className=\"form-inline h-80 justify-content-md-center \">\n                <div className=\"h-100 w-80 overflow-auto\">\n                  <div className='mhchat'>\n                    {this.state.HistoryChat}\n\n                  </div>\n                </div>\n                <input\n                  onChange={this.onChange}\n\n                  type=\"text\" className=\"w-80 form-control\"\n                  value={this.state.ChatMessage}\n                  name=\"ChatMessage\" placeholder=\"Chat here\">\n\n                </input>\n\n                <button type=\"submit\"\n                  onClick={this.SendMessageChat} className=\" btn sendc\">\n                </button>\n                <div className=\"input-group-prepend\"></div>\n              </form>\n            </div>\n\n            <div className={this.GetElemntCssClass(1)}>\n\n              <div\n                className={`${this.IsVedioElemntVisble(this.state.guest[1][1]) ? 'visible' : 'd-none'}  `}>\n                <video\n                  ref={this.state.guest[1][0]}\n                  className=\"Vd-box h-0 w-100\" autoPlay >\n                </video>\n                <span onClick={() => this.ToogleBox(this.state.guest[1])} className=\" video-controls btn\"></span>\n\n              </div>\n\n              <div\n                className={`${this.IsVedioElemntVisble(this.state.guest[2][1]) ? 'visible' : 'd-none'}  `}>\n                <video ref={this.state.guest[2][0]} className=\"Vd-box h-0 w-100\" autoPlay>\n                </video>\n\n                <span onClick={() => this.ToogleBox(this.state.guest[2])} className=\"  video-controls btn\"></span>\n\n              </div>\n\n            </div>\n\n\n            <div className={this.GetElemntCssClass(2) + ` `}>\n\n\n              <video\n                ref={this.state.guest[0][0]} autoPlay\n                className=\"Vd-box h-0 w-100 \">\n              </video>\n              <span\n                onClick={() => this.ToogleBox(this.state.guest[0])}\n                className={`${!this.state.First ? 'visible' : 'd-none'}  video-controls btn `}\n              ></span>\n\n            </div>\n\n            <div className={this.GetElemntCssClass(3)}>\n\n\n\n              <div\n                className={`${this.IsVedioElemntVisble(this.state.guest[3][1]) ? 'visible' : 'd-none'}  `}>\n                <video ref={this.state.guest[3][0]} className=\"Vd-box h-0 w-100\" autoPlay>\n                </video>\n\n                <span onClick={() => this.ToogleBox(this.state.guest[3])} className=\"  video-controls btn\"></span>\n\n              </div>\n\n\n              <div\n                className={`${this.IsVedioElemntVisble(this.state.guest[4][1]) ? 'visible' : 'd-none'}  `}>\n                <video ref={this.state.guest[4][0]} className=\"Vd-box h-0 w-100\" autoPlay>\n                </video>\n\n                <span onClick={() => this.ToogleBox(this.state.guest[4])} className=\"  video-controls btn\"></span>\n\n              </div>\n\n\n            </div>\n            <div className=\"SideBarChat\">\n\n\n              <button type=\"submit\" onClick={() => this.ToggleElementCssClass(0)}\n                className={`${this.GetElemntCssClass(0) === 'd-none' ? 'OpenChat' : 'CloseChat'} btn`}></button>\n            </div>\n          </div>\n        </div>\n        <Footer></Footer>\n        <Modal admin={this.state.First}\n          Id={this.state.guest[0]}\n          KikHimOut={this.KikHimOut}\n          onChange={this.onChange}\n          ToogleBox={this.ToogleBox}\n          PrivetMessage={this.state.PrivetMessage}\n          SendPrivetMessage={this.SendPrivetMessage}\n          removeUserFromRoom={this.removeUserFromRoom}></Modal>\n\n        <Modal admin={this.state.First}\n          Id={this.state.guest[1]}\n          KikHimOut={this.KikHimOut}\n          onChange={this.onChange}\n          ToogleBox={this.ToogleBox}\n          PrivetMessage={this.state.PrivetMessage}\n          SendPrivetMessage={this.SendPrivetMessage}\n          removeUserFromRoom={this.removeUserFromRoom}></Modal>\n\n        <Modal admin={this.state.First}\n          onChange={this.onChange}\n          Id={this.state.guest[2]}\n          KikHimOut={this.KikHimOut}\n          ToogleBox={this.ToogleBox}\n          PrivetMessage={this.state.PrivetMessage}\n          SendPrivetMessage={this.SendPrivetMessage}\n          removeUserFromRoom={this.removeUserFromRoom}></Modal>\n\n\n        <Modal admin={this.state.First}\n          Id={this.state.guest[3]}\n          onChange={this.onChange}\n          KikHimOut={this.KikHimOut}\n          ToogleBox={this.ToogleBox}\n          PrivetMessage={this.state.PrivetMessage}\n          SendPrivetMessage={this.SendPrivetMessage}\n          removeUserFromRoom={this.removeUserFromRoom}></Modal>\n\n\n        <Modal admin={this.state.First}\n          onChange={this.onChange}\n          Id={this.state.guest[4]}\n          KikHimOut={this.KikHimOut}\n          ToogleBox={this.ToogleBox}\n          PrivetMessage={this.state.PrivetMessage}\n          SendPrivetMessage={this.SendPrivetMessage}\n          removeUserFromRoom={this.removeUserFromRoom}></Modal>\n\n      </React.Fragment>\n    );\n  }\n\n}\n\nconst initialState = {\n  socket: null,                 //the socket io ini will be stored here\n  rtpCapabilities: '',          //the rtp infor retrived from the server will be stored here\n  isFreeToJoin: false,          //the if ther room is avalble to join\n  HiddeTheRoom: true,           //if the room is hidden from punlic\n  Lock: false,                  //is the room is lock\n  device: null,                 //mediasoup driver will be stoed here\n  IsViewer: false,              //if the user is viewer or memper of ther room\n  isStream:false,               //if the room is stream publicly or not\n  producerTransport: null,      //the proucert transport will be stored here\n  consumerTransports: [],       //the memper of the room will be stored herer\n  producer: null,               //if the user procues stream will be stored here\n  BossId: 0,                    //the admin of ther room id will be stord here\n  HistoryChat: [],              //the chat log will be stored here\n  guest: [[], [], [], [], []],  //this list will contain the room users\n  case: [true, false, false,    //the curren case of the view\n    false, false, false],\n  ChatMessage: \"\",              //the value of the chat box\n  PrivetMessage: \"\",            //the value of the privet message chat box\n  First: false,                 //the state of the user if admin or not\n // queueGuest:[],              //the queu is a list of new users t prevent dublicate\n  ChangeStatVale: [             //the vlue of the css case classes\n    [1, 0, 5, 4, 3, 2, 7, 6],\n    [5, 2, 1, 7, 6, 0, 4, 3],\n    [6, 7, 3, 2, 5, 4, 0, 1]]\n  ,\n  view:                         //the array of class in each cases\n    [\n      ['d-none', 'col-md-6', 'col-md-4', 'col-md-4', 'd-none', 'd-none', 'd-none', 'col-md-4'],\n      ['d-none', 'd-none', 'col-md-3', 'col-md-2', 'col-md-3', 'col-md-4', 'd-none,d-none'],\n      ['col-md-7', 'col-md-6', 'col-md-5', 'col-md-4', 'col-md-6', 'col-md-6', 'col-md-6', 'col-md-5'],\n      ['d-none', 'd-none', 'd-none', 'col-md-2', 'col-md-3', 'd-none', 'col-md-4', 'col-md-3']]\n  ,\n  params:                     // mediasoup configratio params\n  {\n\n    encodings: [\n      {\n        rid: 'r0',\n        maxBitrate: 100000,\n        scalabilityMode: 'S1T3',\n      },\n      {\n        rid: 'r1',\n        maxBitrate: 300000,\n        scalabilityMode: 'S1T3',\n      },\n      {\n        rid: 'r2',\n        maxBitrate: 900000,\n        scalabilityMode: 'S1T3',\n      },\n    ],\n    // https://mediasoup.org/documentation/v3/mediasoup-client/api/#ProducerCodecOptions\n    codecOptions: {\n      videoGoogleStartBitrate: 1000\n    }\n  }\n\n}\nexport default withRouter(CallBord);\n\n\n/*\n\n   \n         [boolead]       [view1  ,     view1     ,  view1  ,   view1  ,]\n      view               [    view1        view2       view3       view4]\n  case [0] [boolead][view]     x     ||     x     || col-md-6 ||    x  \n  case [1] [boolead][view]   col-md-6||     x     || col-md-6 ||    x\n  case [2] [boolead][view]   col-md-4||  col-md-3 || col-md-5 ||    x\n  case [3] [boolead][view]   col-md-4||  col-md-2 || col-md-4 || col-md-2\n  case [4] [boolead][view]      x    ||  col-md-3 || col-md-6 || col-md-3\n  case [5] [boolead][view]      x    ||  col-md-4 || col-md-6 ||    x\n  case [6] [boolead][view]      x    ||     x     || col-md-6 || col-md-4\n  case [7] [boolead][view]  col-md-4 ||     x     || col-md-5 || col-md-3\n\n\n  closeCaller(){\n\n  view --2\n    ---3 set 2\n    ---4 set 5\n    ---6 set 0\n    ---7 set 1\n    ---0 set 6\n    ---1 set 7\n    ---2 set 3\n    ---5 set 4\n\n  }\n\n  shoeCaller(){\n  view --1\n    ---0 set 5\n    ---1 set 2\n    ---6 set 4\n    ---7 set 3\n    ---2 set 1\n    ---3 set 7\n    ---4 set 6\n    ---5 set 0\n    }\n  ToogleChat(){\n    ---0 set 1 \n    ---1 set 0\n    ---2 set 5 \n    ---5 set 2\n    ---3 set 4\n    ---4 set 3\n    ---6 set 7\n    ---7 set 6\n  }\n\n*/","import React, { Component } from 'react';\nclass Terms extends Component {\n    state = {  }\n    //© wemet.live LLC • Terms of Service • Privacy Policy • Community Guidelines\n    render() { \n        return (<div className=\"container  mt-3 justify-content-md-center \">\n            <br></br>\n9            <br></br>\n            <br></br>\n            <div><h1>Wemet Terms of Service Agreement</h1></div>\n            <br></br>\n            <h1>Terms and Conditions</h1>\n<p>Last updated: January 03, 2022</p>\n<p>Please read these terms and conditions carefully before using Our Service.</p>\n<h1>Interpretation and Definitions</h1>\n<h2>Interpretation</h2>\n<p>The words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.</p>\n<h2>Definitions</h2>\n<p>For the purposes of these Terms and Conditions:</p>\n<ul>\n<li>\n<p><strong>Affiliate</strong> means an entity that controls, is controlled by or is under common control with a party, where &quot;control&quot; means ownership of 50% or more of the shares, equity interest or other securities entitled to vote for election of directors or other managing authority.</p>\n</li>\n<li>\n<p><strong>Country</strong> refers to: Florida,  United States</p>\n</li>\n<li>\n<p><strong>Company</strong> (referred to as either &quot;the Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement) refers to weemeet.</p>\n</li>\n<li>\n<p><strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.</p>\n</li>\n<li>\n<p><strong>Service</strong> refers to the Website.</p>\n</li>\n<li>\n<p><strong>Terms and Conditions</strong> (also referred as &quot;Terms&quot;) mean these Terms and Conditions that form the entire agreement between You and the Company regarding the use of the Service.</p>\n</li>\n<li>\n<p><strong>Third-party Social Media Service</strong> means any services or content (including data, information, products or services) provided by a third-party that may be displayed, included or made available by the Service.</p>\n</li>\n<li>\n<p><strong>Website</strong> refers to weemeet, accessible from\n <a href=\"https://www.wemet.live\" rel=\"noopener noreferrer\" target=\"_blank\">https://www.wemet.live</a></p>\n</li>\n<li>\n<p><strong>You</strong> means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.</p>\n</li>\n</ul>\n<h1>Acknowledgment</h1>\n<p>These are the Terms and Conditions governing the use of this Service and the agreement that operates between You and the Company. These Terms and Conditions set out the rights and obligations of all users regarding the use of the Service.</p>\n<p>Your access to and use of the Service is conditioned on Your acceptance of and compliance with these Terms and Conditions. These Terms and Conditions apply to all visitors, users and others who access or use the Service.</p>\n<p>By accessing or using the Service You agree to be bound by these Terms and Conditions. If You disagree with any part of these Terms and Conditions then You may not access the Service.</p>\n<p>You represent that you are over the age of 18. The Company does not permit those under 18 to use the Service.</p>\n<p>Your access to and use of the Service is also conditioned on Your acceptance of and compliance with the Privacy Policy of the Company. Our Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your personal information when You use the Application or the Website and tells You about Your privacy rights and how the law protects You. Please read Our Privacy Policy carefully before using Our Service.</p>\n<h1>Links to Other Websites</h1>\n<p>Our Service may contain links to third-party web sites or services that are not owned or controlled by the Company.</p>\n<p>The Company has no control over, and assumes no responsibility for, the content, privacy policies, or practices of any third party web sites or services. You further acknowledge and agree that the Company shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with the use of or reliance on any such content, goods or services available on or through any such web sites or services.</p>\n<p>We strongly advise You to read the terms and conditions and privacy policies of any third-party web sites or services that You visit.</p>\n<h1>Termination</h1>\n<p>We may terminate or suspend Your access immediately, without prior notice or liability, for any reason whatsoever, including without limitation if You breach these Terms and Conditions.</p>\n<p>Upon termination, Your right to use the Service will cease immediately.</p>\n<h1>Limitation of Liability</h1>\n<p>Notwithstanding any damages that You might incur, the entire liability of the Company and any of its suppliers\n     under any provision of this Terms.</p>\n<p>To the maximum extent permitted by applicable law, in no event shall the Company or its suppliers be liable for any special, \n    incidental, indirect, or consequential damages whatsoever (including, but not limited to, damages for loss of profits,\n     loss of data or other information, for business interruption, for personal injury, loss of privacy arising out of or in\n      any way related to the use of or inability to use the Service, third-party software and/or third-party hardware used \n      with the Service, or otherwise in connection with any provision of this Terms), even if the Company or any supplier\n       has been advised of the possibility of such damages and even if the remedy fails of its essential purpose.</p>\n<p>Some states do not allow the exclusion of implied warranties or limitation of liability for incidental or consequential \n    damages, which means that some of the above limitations may not apply. In these states, each party's liability will be limited \n    to the greatest extent permitted by law.</p>\n<h1>&quot;AS IS&quot; and &quot;AS AVAILABLE&quot; Disclaimer</h1>\n<p>The Service is provided to You &quot;AS IS&quot; and &quot;AS AVAILABLE&quot; and with all faults and defects without warranty of any kind. To the maximum extent permitted under applicable law, the Company, on its own behalf and on behalf of its Affiliates and its and their respective licensors and service providers, expressly disclaims all warranties, whether express, implied, statutory or otherwise, with respect to the Service, including all implied warranties of merchantability, fitness for a particular purpose, title and non-infringement, and warranties that may arise out of course of dealing, course of performance, usage or trade practice. Without limitation to the foregoing, the Company provides no warranty or undertaking, and makes no representation of any kind that the Service will meet Your requirements, achieve any intended results, be compatible or work with any other software, applications, systems or services, operate without interruption, meet any performance or reliability standards or be error free or that any errors or defects can or will be corrected.</p>\n<p>Without limiting the foregoing, neither the Company nor any of the company's provider makes any representation or warranty of any kind, express or implied: (i) as to the operation or availability of the Service, or the information, content, and materials or products included thereon; (ii) that the Service will be uninterrupted or error-free; (iii) as to the accuracy, reliability, or currency of any information or content provided through the Service; or (iv) that the Service, its servers, the content, or e-mails sent from or on behalf of the Company are free of viruses, scripts, trojan horses, worms, malware, timebombs or other harmful components.</p>\n<p>Some jurisdictions do not allow the exclusion of certain types of warranties or limitations on applicable statutory rights of a consumer, so some or all of the above exclusions and limitations may not apply to You. But in such a case the exclusions and limitations set forth in this section shall be applied to the greatest extent enforceable under applicable law.</p>\n<h1>Governing Law</h1>\n<p>The laws of the Country, excluding its conflicts of law rules, shall govern this Terms and Your use of the Service. Your use of the Application may also be subject to other local, state, national, or international laws.</p>\n<h1>Disputes Resolution</h1>\n<p>If You have any concern or dispute about the Service, You agree to first try to resolve the dispute informally by contacting the Company.</p>\n<h1>For European Union (EU) Users</h1>\n<p>If You are a European Union consumer, you will benefit from any mandatory provisions of the law of the country in which you are resident in.</p>\n<h1>United States Legal Compliance</h1>\n<p>You represent and warrant that (i) You are not located in a country that is subject to the United States government embargo, or that has been designated by the United States government as a &quot;terrorist supporting&quot; country, and (ii) You are not listed on any United States government list of prohibited or restricted parties.</p>\n<h1>Severability and Waiver</h1>\n<h2>Severability</h2>\n<p>If any provision of these Terms is held to be unenforceable or invalid, such provision will be changed and interpreted to accomplish the objectives of such provision to the greatest extent possible under applicable law and the remaining provisions will continue in full force and effect.</p>\n<h2>Waiver</h2>\n<p>Except as provided herein, the failure to exercise a right or to require performance of an obligation under these Terms shall not effect a party's ability to exercise such right or require such performance at any time thereafter nor shall the waiver of a breach constitute a waiver of any subsequent breach.</p>\n<h1>Translation Interpretation</h1>\n<p>These Terms and Conditions may have been translated if We have made them available to You on our Service.\nYou agree that the original English text shall prevail in the case of a dispute.</p>\n<h1>Changes to These Terms and Conditions</h1>\n<p>We reserve the right, at Our sole discretion, to modify or replace these Terms at any time. If a revision is material We will make reasonable efforts to provide at least 30 days' notice prior to any new terms taking effect. What constitutes a material change will be determined at Our sole discretion.</p>\n<p>By continuing to access or use Our Service after those revisions become effective, You agree to be bound by the revised terms. If You do not agree to the new terms, in whole or in part, please stop using the website and the Service.</p>\n<h1>Contact Us</h1>\n<p>If you have any questions about these Terms and Conditions, You can contact us:</p>\n<ul>\n<li>By visiting this page on our website: <a href=\"https://www.wemet.live/contact\" rel=\"noopener noreferrer\"  target=\"_blank\">https://www.wemet.live/contact</a></li>\n</ul>\n\n</div>\n       );\n    }\n}\n \nexport default Terms;","import React, { Component } from 'react';\nclass Guidelines extends Component {\n    state = {  }\n    //© wemet.live LLC • Terms of Service • Privacy Policy • Community Guidelines\n    render() { \n        return (         <div className=\"container  mt-3 justify-content-md-center \">\n             <br></br>\n             <br></br>\n             <br></br>\n            \n             <body><h1>Wemet Guidelines</h1>\n<p>wemet was created to provide a platform where people could connect with \n    other people of diverse backgrounds and experiences that may differ from their own.\n     wemet’s Community Guidelines are intended to further that goal by providing general guidance and explaining what is and isn’t allowed on wemet. They are not intended to comprehensively identify every type of inappropriate or unlawful conduct or content. Users should be guided by common sense and an expectation that they should treat their fellow users with respect.</p>\n<p>These Community Guidelines apply to your access to and use of the wemet website and any services offered by wemet (collectively, the “<strong>Services</strong>”). wemet reserves the right to revise these Community Guidelines at any time for any reason and updates will be posted to the Services. These Community Guidelines are in addition to the wemet <a href=\"/static/terms.html\">Terms of Service</a>, which also apply to your access to and use of the Services.</p>\n<p>wemet reserves the right to ban (temporarily or permanently) or take other appropriate action with or without notice with respect to any user that engages in conduct that wemet determines, in its sole discretion, to be inappropriate or harmful, whether or not such conduct is identified below.</p>\n<p>If you encounter conduct or content on the Services that you believe violate any of the guidelines below or if you have other safety concerns about the Services, please contact wemet at <a href=\"mailto:safety@wemet.live\">safety@wemet.live</a> and include “wemet-Safety” in the subject line. While wemet is not responsible to you as a user for enforcing these Community Guidelines, reports of violations are helpful to wemet.</p>\n<p>Parental control protections (such as computer hardware, software, or filtering services) are also commercially available and may assist you in limiting minors’ access to materials that may be harmful to or inappropriate for minors. There are a number of websites that provide information about such parental control protections, including but not limited to <a href=\"https://www.connectsafely.org/controls/\">https://www.connectsafely.org/controls/</a>.</p>\n<ul>\n<li><strong>Violations of the Law.</strong> You must comply with all applicable local, national and international laws while using the Services. Any content, activity or conduct featuring, encouraging, offering, or soliciting illegal activity or content is prohibited. wemet reserves the right to report any such violations to law enforcement.</li>\n<li><strong>Ban Circumvention.</strong> Any attempt to circumvent a ban, whether temporary or permanent, is prohibited.</li>\n<li><strong>Violence and Threats.</strong> Threats of violence or threats to harm others are strictly prohibited. This includes threats to physically harm others, attempts to intimidate others, terroristic threats, threats to obtain or disclose personal information or private content of others or threats intended to force another user to engage in unwanted or inappropriate conduct.</li>\n<li><strong>Hateful Conduct and Harassment.</strong> Conduct and content that attacks or denigrates others based on characteristics such as race, ethnicity, gender, sexual orientation, gender identity, immigration status, disability or national origin is prohibited. Harassment of any kind, including without limitation unwelcome sexual advances and solicitations, malicious false reporting of other users, and personal attacks, are prohibited.</li>\n<li><strong>Nudity, Pornography and Sexually Explicit Conduct and Content.</strong> Nudity, pornography and sexually explicit conduct and content are prohibited on the moderated sections of the Services. Content or conduct that threatens or promotes sexual violence or exploitation are strictly prohibited on any portion of the Services and may be reported to law enforcement.</li>\n<li><strong>Conduct or Content Involving Minors.</strong> All conduct or content that exploits, sexualizes or endangers the safety of minors in any way is strictly prohibited on any of the Services. We report such content and conduct to the National Center for Missing and Exploited Children and/or the appropriate law enforcement agency(ies).</li>\n<li><strong>Unauthorized Sharing of Private Information.</strong> Respect the privacy of others. Do not attempt to obtain or share content that may reveal private personal information about individuals without their permission.</li>\n<li><strong>Impersonation.</strong> Impersonating someone else or attempting to deceive other users about who you are (including by providing false information) is prohibited.</li>\n<li><strong>Self-Harm.</strong> Conduct or content that glorifies, encourages or promotes self-harm is prohibited.</li>\n<li><strong>Animal Cruelty.</strong> Conduct or content that involves or promotes harm or cruelty to animals is prohibited.</li>\n<li><strong>Marketing and Advertising.</strong> The Services may not be used to market, advertise or promote any goods or services.</li>\n<li><strong>Bots.</strong> Use of bots of any kind to access or use the Services is prohibited.</li>\n</ul></body>\n        </div>\n       );\n    }\n}\n \nexport default Guidelines;","import React, { Component } from 'react';\nclass Privacy extends Component {\n    state = {  }\n    //© wemet.live LLC • Terms of Service • Privacy Policy • Community Guidelines\n    render() { \n        return (         <div className=\"container  mt-3 justify-content-md-center \">\n            <br></br>\n            <br></br>\n            <br></br>\n             <h1>Privacy Policy</h1>\n<p>Last updated: January 03, 2022</p>\n<p>This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.</p>\n<p>We use Your Personal data to provide and improve the Service. By using the Service,\n     You agree to the collection and use of information in accordance with this Privacy Policy.</p>\n<h1>Interpretation and Definitions</h1>\n<h2>Interpretation</h2>\n<p>The words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.</p>\n<h2>Definitions</h2>\n<p>For the purposes of this Privacy Policy:</p>\n<ul>\n<li>\n<p><strong>Account</strong> means a unique account created for You to access our Service or parts of our Service.</p>\n</li>\n<li>\n<p><strong>Company</strong> (referred to as either &quot;the Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement) refers to weemeeet.</p>\n</li>\n<li>\n<p><strong>Cookies</strong> are small files that are placed on Your computer, mobile device or any other device by a website, containing the details of Your browsing history on that website among its many uses.</p>\n</li>\n<li>\n<p><strong>Country</strong> refers to: Florida,  United States</p>\n</li>\n<li>\n<p><strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.</p>\n</li>\n<li>\n<p><strong>Personal Data</strong> is any information that relates to an identified or identifiable individual.</p>\n</li>\n<li>\n<p><strong>Service</strong> refers to the Website.</p>\n</li>\n<li>\n<p><strong>Service Provider</strong> means any natural or legal person who processes the data on behalf of the Company. It refers to third-party companies or individuals employed by the Company to facilitate the Service, to provide the Service on behalf of the Company, to perform services related to the Service or to assist the Company in analyzing how the Service is used.</p>\n</li>\n<li>\n<p><strong>Usage Data</strong> \nrefers to data collected automatically, either generated by the use of the Service or from the Service\n infrastructure itself (for example, the duration of a page visit).</p>\n</li>\n<li>\n<p><strong>Website</strong> refers to weemeeet, accessible from \n<a href=\"https://www.wemet.live\"  rel=\"external nofollow noreferrer noopener\" \ntarget=\"_blank\">https://www.wemet.live</a></p>\n</li>\n<li>\n<p><strong>You</strong> means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.</p>\n</li>\n</ul>\n<h1>Collecting and Using Your Personal Data</h1>\n<h2>Types of Data Collected</h2>\n<h3>Personal Data</h3>\n<p>While using Our Service, We may ask You to provide Us with certain personally identifiable information that can be used to contact or identify You. Personally identifiable information may include, but is not limited to:</p>\n<ul>\n<li>Usage Data</li>\n</ul>\n<h3>Usage Data</h3>\n<p>Usage Data is collected automatically when using the Service.</p>\n<p>Usage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data.</p>\n<p>When You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data.</p>\n<p>We may also collect information that Your browser sends whenever You visit our Service or when You access the Service by or through a mobile device.</p>\n<h3>Tracking Technologies and Cookies</h3>\n<p>We use Cookies and similar tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyze Our Service. The technologies We use may include:</p>\n<ul>\n<li><strong>Cookies or Browser Cookies.</strong> A cookie is a small file placed on Your Device. You can instruct Your browser to refuse all Cookies or to indicate when a Cookie is being sent. However, if You do not accept Cookies, You may not be able to use some parts of our Service. Unless you have adjusted Your browser setting so that it will refuse Cookies, our Service may use Cookies.</li>\n<li><strong>Flash Cookies.</strong> Certain features of our Service may use local stored objects\n (or Flash Cookies) to collect and store information about Your preferences or Your activity\n  on our Service. Flash Cookies are not managed by the same browser settings as those used for \n  Browser Cookies. For more information on how You can delete Flash Cookies,\n   please read &quot;Where can I change the settings for disabling, or deleting local \n   shared objects?&quot; available at \n   <a href=\"https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_\" rel=\"external noreferrer nofollow noopener\" target=\"_blank\">https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_</a></li>\n<li><strong>Web Beacons.</strong> Certain sections of our Service and our emails may contain small electronic files known as web beacons (also referred to as clear gifs, pixel tags, and single-pixel gifs) that permit the Company, for example, to count users who have visited those pages or opened an email and for other related website statistics (for example, recording the popularity of a certain section and verifying system and server integrity).</li>\n</ul>\n<p>Cookies can be &quot;Persistent&quot; or &quot;Session&quot; Cookies. Persistent Cookies remain on Your personal computer or mobile device when You go offline, while Session Cookies are deleted as soon as You close Your web browser.</p>\n<p>We use both Session and Persistent Cookies for the purposes set out below:</p>\n<ul>\n<li>\n<p><strong>Necessary / Essential Cookies</strong></p>\n<p>Type: Session Cookies</p>\n<p>Administered by: Us</p>\n<p>Purpose: These Cookies are essential to provide You with services available through the Website and to enable You to use some of its features. They help to authenticate users and prevent fraudulent use of user accounts. Without these Cookies, the services that You have asked for cannot be provided, and We only use these Cookies to provide You with those services.</p>\n</li>\n<li>\n<p><strong>Cookies Policy / Notice Acceptance Cookies</strong></p>\n<p>Type: Persistent Cookies</p>\n<p>Administered by: Us</p>\n<p>Purpose: These Cookies identify if users have accepted the use of cookies on the Website.</p>\n</li>\n<li>\n<p><strong>Functionality Cookies</strong></p>\n<p>Type: Persistent Cookies</p>\n<p>Administered by: Us</p>\n<p>Purpose: These Cookies allow us to remember choices You make when You use the Website, such as remembering your login details or language preference. The purpose of these Cookies is to provide You with a more personal experience and to avoid You having to re-enter your preferences every time You use the Website.</p>\n</li>\n</ul>\n<p>For more information about the cookies we use and your choices regarding cookies, please visit our Cookies Policy or the Cookies section of our Privacy Policy.</p>\n<h2>Use of Your Personal Data</h2>\n<p>The Company may use Personal Data for the following purposes:</p>\n<ul>\n<li>\n<p><strong>To provide and maintain our Service</strong>, including to monitor the usage of our Service.</p>\n</li>\n<li>\n<p><strong>To manage Your Account:</strong> to manage Your registration as a user of the Service. The Personal Data You provide can give You access to different functionalities of the Service that are available to You as a registered user.</p>\n</li>\n<li>\n<p><strong>For the performance of a contract:</strong> the development, compliance and undertaking of the purchase contract for the products, items or services You have purchased or of any other contract with Us through the Service.</p>\n</li>\n<li>\n<p><strong>To contact You:</strong> To contact You by email, telephone calls, SMS, or other equivalent forms of electronic communication, such as a mobile application's push notifications regarding updates or informative communications related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for their implementation.</p>\n</li>\n<li>\n<p><strong>To provide You</strong> with news, special offers and general information about other goods, services and events which we offer that are similar to those that you have already purchased or enquired about unless You have opted not to receive such information.</p>\n</li>\n<li>\n<p><strong>To manage Your requests:</strong> To attend and manage Your requests to Us.</p>\n</li>\n<li>\n<p><strong>For business transfers:</strong> We may use Your information to evaluate or conduct a merger, divestiture, restructuring, reorganization, dissolution, or other sale or transfer of some or all of Our assets, whether as a going concern or as part of bankruptcy, liquidation, or similar proceeding, in which Personal Data held by Us about our Service users is among the assets transferred.</p>\n</li>\n<li>\n<p><strong>For other purposes</strong>: We may use Your information for other purposes, such as data analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to evaluate and improve our Service, products, services, marketing and your experience.</p>\n</li>\n</ul>\n<p>We may share Your personal information in the following situations:</p>\n<ul>\n<li><strong>With Service Providers:</strong> We may share Your personal information with Service Providers to monitor and analyze the use of our Service,  to contact You.</li>\n<li><strong>For business transfers:</strong> We may share or transfer Your personal information in connection with, or during negotiations of, any merger, sale of Company assets, financing, or acquisition of all or a portion of Our business to another company.</li>\n<li><strong>With Affiliates:</strong> We may share Your information with Our affiliates, in which case we will require those affiliates to honor this Privacy Policy. Affiliates include Our parent company and any other subsidiaries, joint venture partners or other companies that We control or that are under common control with Us.</li>\n<li><strong>With business partners:</strong> We may share Your information with Our business partners to offer You certain products, services or promotions.</li>\n<li><strong>With other users:</strong> when You share personal information or otherwise interact in the public areas with other users, such information may be viewed by all users and may be publicly distributed outside.</li>\n<li><strong>With Your consent</strong>: We may disclose Your personal information for any other purpose with Your consent.</li>\n</ul>\n<h2>Retention of Your Personal Data</h2>\n<p>The Company will retain Your Personal Data only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use Your Personal Data to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.</p>\n<p>The Company will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of Our Service, or We are legally obligated to retain this data for longer time periods.</p>\n<h2>Transfer of Your Personal Data</h2>\n<p>Your information, including Personal Data, is processed at the Company's operating offices and in any other places where the parties involved in the processing are located. It means that this information may be transferred to — and maintained on — computers located outside of Your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from Your jurisdiction.</p>\n<p>Your consent to this Privacy Policy followed by Your submission of such information represents Your agreement to that transfer.</p>\n<p>The Company will take all steps reasonably necessary to ensure that Your data is treated securely and in accordance with this Privacy Policy and no transfer of Your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of Your data and other personal information.</p>\n<h2>Disclosure of Your Personal Data</h2>\n<h3>Business Transactions</h3>\n<p>If the Company is involved in a merger, acquisition or asset sale, Your Personal Data may be transferred. We will provide notice before Your Personal Data is transferred and becomes subject to a different Privacy Policy.</p>\n<h3>Law enforcement</h3>\n<p>Under certain circumstances, the Company may be required to disclose Your Personal Data if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).</p>\n<h3>Other legal requirements</h3>\n<p>The Company may disclose Your Personal Data in the good faith belief that such action is necessary to:</p>\n<ul>\n<li>Comply with a legal obligation</li>\n<li>Protect and defend the rights or property of the Company</li>\n<li>Prevent or investigate possible wrongdoing in connection with the Service</li>\n<li>Protect the personal safety of Users of the Service or the public</li>\n<li>Protect against legal liability</li>\n</ul>\n<h2>Security of Your Personal Data</h2>\n<p>The security of Your Personal Data is important to Us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While We strive to use commercially acceptable means to protect Your Personal Data, We cannot guarantee its absolute security.</p>\n<h1>Children's Privacy</h1>\n<p>Our Service does not address anyone under the age of 13. We do not knowingly collect personally identifiable information from anyone under the age of 13. If You are a parent or guardian and You are aware that Your child has provided Us with Personal Data, please contact Us. If We become aware that We have collected Personal Data from anyone under the age of 13 without verification of parental consent, We take steps to remove that information from Our servers.</p>\n<p>If We need to rely on consent as a legal basis for processing Your information and Your country requires consent from a parent, We may require Your parent's consent before We collect and use that information.</p>\n<h1>Links to Other Websites</h1>\n<p>Our Service may contain links to other websites that are not operated by Us. If You click on a third party link, You will be directed to that third party's site. We strongly advise You to review the Privacy Policy of every site You visit.</p>\n<p>We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.</p>\n<h1>Changes to this Privacy Policy</h1>\n<p>We may update Our Privacy Policy from time to time. We will notify You of any changes by posting the new Privacy Policy on this page.</p>\n<p>We will let You know via email and/or a prominent notice on Our Service, prior to the change becoming effective and update the &quot;Last updated&quot; date at the top of this Privacy Policy.</p>\n<p>You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.</p>\n<h1>Contact Us</h1>\n<p>If you have any questions about this Privacy Policy, You can contact us:</p>\n<ul>\n<li>By email: help@wemet.live</li>\n</ul>\n        </div>\n       );\n    }\n}\n \nexport default Privacy;","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router' \n\nclass Switch extends Component {\n     \n  \ncomponentDidMount(){\n  try{\n\n  if(this.props.location.state.CallBorad){\n    this.props.history.push({\n      pathname: '/CallBorad/'+this.props.location.state.TheRoom,\n    state:{\n      IsPublic:  this.props.location.state.IsPublic,\n      IsViewer:  this.props.location.state.IsViewer\n   }\n    }) \n\n  }else{\n    this.props.history.push({\n      pathname: '/',\n       }) } \n  }catch(e){\n    this.props.history.push({\n      pathname: '/',\n   \n    })\n  }\n}\n    render() {\n   \n        return (\n            <div></div>\n        )\n\n}\n\n}\n\nexport default withRouter(Switch);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Body from \"./Componant/body\";\nimport NavBar from \"./Componant/NavBar\";\nimport CallBorad from \"./Componant/CallBord\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Terms from \"./Componant/Terms\"\nimport Guidelines from './Componant/Guidelines';\nimport Privacy from './Componant/Privacy';\nimport Switcher from \"./Componant/Switcher\"\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n\n    <Router>\n        <NavBar></NavBar>\n\n        <Switch>     \n        <Route path=\"/CallBorad/:room\"  component={CallBorad} />\n        <Route path=\"/Terms\"  component={Terms} />\n        <Route path=\"/Guidelines\"  component={Guidelines} />\n        <Route path=\"/Privacy\"  component={Privacy} />\n        <Route path=\"/Switch\"  component={Switcher} />\n        <Route path=\"/\" component={Body} />\n        </Switch>\n    </Router>\n        </React.Fragment>\n        ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}